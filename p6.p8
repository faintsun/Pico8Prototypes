pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
player = {}
player.x = 0
player.y = 40
player.width = 16
player.height = 16
player.dx = 1
player.dy = 1
player.level = 1
player.anistate = 0
player.frame = 0
player.sprite_timer = 0

moved_left = false
moved_right = false

start_screen = true
game_screen = false
game_win = false
game_lose = false


cube = {}
cube.x = 76
cube.y = 102
cube.width = 4
cube.height = 4
cube.held = false
cube.level = 3

cube_frame = {}
cube_frame.x = 80
cube_frame.y = 32
cube_frame.level = 1
-----------------------
--  update functions --
-----------------------

function _update()

	if start_screen == true then
		if btn(4) or btn(5) then
			start_screen = false
			game_screen = true
		end

	elseif game_screen == true then
  -- check if decrease level
  check_dec_level()
  
  -- check if increase level
  check_inc_level()
  
  -- update player according to level
 	update_player()
 	update_cube()
 end
	
end

-------------------------
-- return up level
-------------------------
function check_dec_level()
 if btnp(4) then
 
		if player.level == 2 then
  	-- go from 2 to 1
  	player.level = 1
  	player.y = 40
  	player.x = (player.x - 32) * 2
  	player.width = 16
   player.height = 16
   
   			
			if cube.held == true then
    cube.level = 1
    cube.y = 32
    cube.x = (cube.x - 32) * 2
    cube.width = 8
    cube.height = 8
   end
  			
  elseif player.level == 3 then
  		-- go from 3 to 2
  	player.level = 2
  	player.y = 80
  	player.x = (player.x - 32) * 2
  	player.width = 8
   player.height = 8
   
   			
			if cube.held == true then
    cube.level = 2
    cube.y = 76
    cube.x = (cube.x - 32) * 2
    cube.width = 4
    cube.height = 4
   end
   
  end
 end
end

-------------------------
-- go to deeper level
-------------------------
function check_inc_level()
 if btnp(5) then
 
		if player.level == 1 then
  	-- go from 1 to 2
  	player.level = 2
  	player.y = 80
  	player.x = 32 + (player.x/2)
  	player.width = 8
			player.height = 8
			
			if cube.held == true then
    cube.level = 2
    cube.y = 76
    cube.x = 32 + (cube.x/2)
    cube.width = 4
    cube.height = 4
   end
  			
  elseif player.level == 2 then
  	-- go from 2 to 3
  	player.level = 3
  	player.y = 104
  	player.x = 32 + (player.x/2)
  	player.width = 4
			player.height = 4
			
			if cube.held == true then
 			cube.level = 3
    cube.y = 102
    cube.x = 32 + (cube.x/2)
    cube.width = 2
    cube.height = 2
   end
			
  end
 end
end

-------------------------
-- update the player
-------------------------
function update_player()


	-- check if collide with cube
	if player.level == 3 then
 	if cube.held == false then
 		if cube.x <= player.x + 8-4 then
 		if cube.x + 8-6 >= player.x then
   if cube.y + 6 <= player.y + 8 then 
   if cube.y + 8 >= player.y then
 			cube.held = true
 		end
 		end
 		end
 		end
 	end
 end
 
 -- check if win
 if player.level == 1 and cube.held == true then
 	if player.x >= cube_frame.x-15-1 and player.x <= cube_frame.x-15+1 then
 		game_win = true
 		game_screen = false
 	end
 end
			
	-- move left
	if btn(0) then
		player.sprite_timer += player.dx
 	player.anistate = 0
 	
 	-- move left
 	-- adjust left edge depending on level
 	if player.level == 1 then
 		if player.x > 0 then
 			player.x -= 1
 			if cube.held == true then
 				cube.x -= 1
 			end
 			moved_left = true
 			moved_right = false
 		end
 	elseif player.level == 2 then
 		if player.x > 32 then
 			player.x -= 1
 			if cube.held == true then
 				cube.x -= 1
 			end
 			moved_left = true
 			moved_right = false
 		end
 	elseif player.level == 3 then
 		if player.x > 48 then
 			player.x -= 1
 			if cube.held == true then
 				cube.x -= 1
 			end
 			moved_left = true
 			moved_right = false
 		end
 	end
	end
	
	-- move right
 -- adjust right edge depending on level
	if btn(1) then
		player.sprite_timer += player.dx
 	player.anistate = 1
 	 	if player.level == 1 then
 		if player.x < 128 - 16 then
 			player.x += 1
 			if cube.held == true then
 				cube.x += 1
 			end
 			moved_right = true
 			moved_left = false
 		end
 	elseif player.level == 2 then
 		if player.x < 128 - 32 - 8 then
 			player.x += 1
 			if cube.held == true then
 				cube.x += 1
 			end
 			moved_right = true
				moved_left = false
 		end
 	elseif player.level == 3 then
 		if player.x < 128 - 48 - 4 then
 			player.x += 1
 			if cube.held == true then
 				cube.x += 1
 			end
 			moved_right = true
 			moved_left = false
 		end
 	end
	end
end

-------------------------
-- update the cube
-------------------------
function update_cube()
	if cube.held == true then
	
		-- move right
 	if moved_right == true then

 	end
 	
 	-- move right
 	if moved_left == true then

 	end
 	
	end
end

		
----- animate sprite ----
function animate_sprite()
	if player.sprite_timer > 5 then
		if player.frame == 0 then
			player.frame = 1
		elseif player.frame == 1 then
			player.frame = 0
		end
	end
end

function player_jump()
	player.jumping = true
	
	-- check to see if on ground
	if player.y >= 128 - player.size then
		player.yacc = 0
		player.y = 128 - player.size
		player.jumping = false
	end

	player.y += player.yacc
	player.yacc += 0.5
end

function player_collide_cube()
end

-----------------------
-- drawing functions --
-----------------------

function _draw()
	cls()
	if game_screen == true or game_win == true then
 	mapdraw(0, 0, 0, 0, 16, 16)
 	
 	draw_player()
 	draw_cube()
 	draw_cube_frame()
 end
	
	if start_screen == true then
		print('"inception"', 40, 20)
		
		print('x to go down', 38, 50)
		
		print('o to go up', 41, 60)
	end
	
	if game_win == true then
		print('you won!', 40, 20)
	end
end

function draw_player()

	if player.level == 1 then
 	spr(32, player.x, player.y - 8, 2, 2)
	elseif player.level == 2 then 
		spr(34, player.x, player.y, 1, 1)
	elseif player.level == 3 then 
		spr(35, player.x, player.y, 1, 1)
	end
	
end

function draw_cube()

  if cube.level == 1 then
  	spr(36, cube.x, cube.y, 1, 1)
 	elseif cube.level == 2 then 
 		spr(37, cube.x, cube.y, 1, 1)
 	elseif cube.level == 3 then 
 		spr(38, cube.x, cube.y, 1, 1)
 	end	
end

function draw_cube_frame()
	spr(52, cube_frame.x, cube_frame.y, 1, 1)
end
__gfx__
00000000777777777000000000000007000000077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000007000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000007000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000007000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000007000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000007000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000007000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000007000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000004444440000000444440000000009a00a0090000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000044444444000004f0f04000000000000aa0900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000044fffff4000004ffff0f000000000a9aa9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00004ff0f0f400000556865500000000a0a00a0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00004fffffff000055558550044000000000a000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000fff00fff0ff0f55555500fff000009a00a9a090a000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005ffffff5066005555550f5800000900a000000900000a9000000000000000000000000000000000000000000000000000000000000000000000000000000
000055668665555000100010011000000a0aa090900a00009a000000000000000000000000000000000000000000000000000000000000000000000000000000
00055556865555500000000000000000aaaaaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00555555855550000000000000000000a000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05555555855550000000000000000000a000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06605555555500000000000000000000a000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0ff05555555500000000000000000000a000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005555555500000000000000000000a000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005550005500000000000000000000a000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00001100001100000000000000000000aaaaaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000301010101010101010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000300000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000300000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000401010101010101010500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000030101010102000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000040101010105000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
